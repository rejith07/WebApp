pipeline {
        agent none
        tools {
          maven 'maven'
        }
   
        stages {
        
          stage("Source code analysis") {
            agent any
            steps {
             withSonarQubeEnv('sonar') {
               sh 'mvn compile sonar:sonar -Dsonar.host.url=http://18.217.60.35:9000/ -Dsonar.sources=. -Dsonar.tests=. -Dsonar.test.inclusions=**/test/java/servlet/createpage_junit.java -Dsonar.exclusions=**/test/java/servlet/createpage_junit.java -Dsonar.login=admin -Dsonar.password=admin'
             }
             
            }
          }
          stage("Maven build") {
             agent any
             steps {
               sh 'mvn compile'
               }
             }
          stage("Deploy to QA") {
          agent any
            steps {
                     sh 'mvn package'
               }
             }
            /*
           stage('Upload to Artifactory'){
              steps{
                   script{
                      def server = Artifactory.server 'artifactory'
                      def rtMaven = Artifactory.newMavenBuild()
                      rtMaven.deployer releaseRepo:'libs-release-local', snapshotRepo:'libs-snapshot-local', server: server
                      rtMaven.resolver releaseRepo:'libs-release', snapshotRepo:'libs-snapshot', server: server
                  }
              }        
          }
          */
          stage("Functional Test") {
          agent any
            steps {
                   scripts{
                     def rtMaven = Artifactory.newMavenBuild()
                     def buildInfo = rtMaven.run pom: 'functionaltest/pom.xml', goals: 'test'
                     publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '\\functionaltest\\target\\surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: ''])
               }
             }
            }                              
      }
    
    }    
